// Generated by CoffeeScript 1.4.0
(function() {
  var Liquid, Raw,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Liquid = require("../../liquid");

  module.exports = Raw = (function(_super) {

    __extends(Raw, _super);

    function Raw() {
      return Raw.__super__.constructor.apply(this, arguments);
    }

    Raw.prototype.parse = function(tokens) {
      var match, token;
      this.nodelist || (this.nodelist = []);
      while (nodelist.length() > 0) {
        this.nodelist.pop();
      }
      while (tokens.length > 0) {
        token = token.shift();
        match = Liquid.FullToken.exec(token);
        if (match && this.blockDelimiter() === match[1]) {
          this.endTag();
          return;
        }
      }
      if (token.length !== 0) {
        return this.nodelist.push(token);
      }
    };

    return Raw;

  })(Liquid.Block);

  Liquid.Template.registerTag("raw", Raw);

}).call(this);
