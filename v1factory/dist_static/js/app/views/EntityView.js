define(["backbone","app/models/FieldModel","app/models/FormModel","app/views/FormEditorView","app/views/UploadExcelView","app/views/ShowDataView"],function(e,t,n,r,i,s){var o=e.View.extend({el:null,tagName:"li",collection:null,parentName:"",className:"span64 entity",events:{"click .add-property-button":"clickedAdd","click .add-form-button":"clickedAddForm","submit .add-property-form":"formSubmitted","submit .add-form-form":"formFormSubmitted","change .attribs":"changedAttribs","click  .delete":"clickedDelete","click .prop-cross":"clickedPropDelete","click .remove-form":"clickedFormRemove","click .excel":"clickedUploadExcel","click .show-data":"showData","click .edit-form":"clickedEditForm","blur  .property-name-input":"formSubmitted"},initialize:function(e,t,n){_.bindAll(this,"render","doBindings","appendField","appendForm","clickedAdd","formSubmitted","formFormSubmitted","changedAttribs","addedEntity","clickedDelete","modelRemoved","clickedPropDelete","clickedUploadExcel","clickedFormRemove","clickedEditForm","showData"),this.model=e,this.model.bind("change:owns",this.ownsChangedOutside),this.model.bind("change:belongsTo",this.belongsToChangedOutside),this.parentCollection=e.collection,this.parentCollection.bind("initialized",this.doBindings),this.name=e.get("name"),this.parentName=t,this.model.get("fields").bind("add",this.appendField),this.model.get("forms").bind("add",this.appendForm),this.render()},doBindings:function(){this.parentCollection.bind("add",this.addedEntity),this.parentCollection.bind("remove",this.modelRemoved)},render:function(){var e=this,t={name:e.name,attribs:e.model.get("fields").models,other_models:e.parentCollection.models,forms:e.model.get("forms").models},n=_.template(Templates.Entity,t);$(this.el).append(n)},clickedAdd:function(e){$(".add-property-button",this.el).hide(),$(".add-property-form",this.el).fadeIn(),$(".property-name-input",this.el).focus()},clickedAddForm:function(e){$(".add-form-button",this.el).hide(),$(".add-form-form",this.el).fadeIn(),$(".form-name-input",this.el).focus()},formSubmitted:function(e){e.preventDefault();var n=$(".property-name-input",this.el).val();if(n.length!==0){var r=this.model.get("fields")||[];r.add(new t({name:n,type:"text",required:!0}))}return $(".property-name-input",this.el).val(""),$(".add-property-form",this.el).hide(),$(".add-property-button",this.el).fadeIn(),!1},formFormSubmitted:function(e){e.preventDefault();var t=$(".form-name-input",this.el).val(),r={};r.name=t;var i=new n(r,this.model);return this.model.get("forms").add(i),$(".form-name-input",this.el).val(""),$(".add-form-form",this.el).hide(),$(".add-form-button",this.el).fadeIn(),!1},appendField:function(e){var t=this,n=_.template(Templates.Property,{name:e.get("name"),cid:e.cid,type:e.get("type"),entityName:t.model.get("name"),other_models:t.parentCollection.models});this.$el.find(".property-list").append(n)},appendForm:function(e){var t=this,n=_.template(Templates.Form,{form:e});t.$el.find(".form-list").append(n)},changedAttribs:function(e){var t=String(e.target.id).split("-"),n=t[1],r=t[0],i=e.target.options[e.target.selectedIndex].value||e.target.value;this.model.get("fields").get(n).set(r,i)},addedEntity:function(e){var t='<option value="{{'+e.get("name")+'}}">List of '+e.get("name")+"s</option>";$(".attribs",this.el).append(t)},clickedDelete:function(e){this.parentCollection.remove(this.model.cid)},modelRemoved:function(e){e==this.model&&this.remove()},clickedPropDelete:function(e){var t=String(e.target.id||e.target.parentNode.id).replace("delete-","");this.model.get("fields").remove(t),$("#column-"+t).remove()},clickedFormRemove:function(e){e.preventDefault();var t=String(e.target.id||e.target.parentNode.id).replace("remove-","");this.model.get("forms").remove(t),$("#form-"+t).remove()},clickedUploadExcel:function(e){new i(this.model)},clickedEditForm:function(e){var t=String(e.target.id).replace("edit-",""),n=this.model.get("forms").get(t);new r(n,this.model)},showData:function(e){$.ajax({type:"POST",url:"/app/"+appId+"/entities/fetch_data/",data:{model_name:this.model.get("name")},success:function(e){new s(e)},dataType:"JSON"})}});return o});